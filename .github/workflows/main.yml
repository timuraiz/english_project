name: Yandex Cloud Auto-Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Yandex Cloud Container Registry
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YANDEX_SA_JSON }}

      - name: Build and push Docker image
        env:
          CR_REGISTRY: crp357h6d94o1kcgiqhv
          CR_REPOSITORY: english_project
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:user${IMAGE_TAG} .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:user${IMAGE_TAG}

      - name: Connect to Yandex Cloud VM via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          YANDEX_KEY: ${{ secrets.YANDEX_KEY }}
          IMAGE_TAG: ${{ github.sha }}
          CR_REGISTRY: crp357h6d94o1kcgiqhv
          CR_REPOSITORY: english_project
          script: |
            sudo docker login --username oauth --password $YANDEX_KEY cr.yandex
            if [ "$(docker ps -q)" ]; then
              sudo docker kill $(docker ps -q) &> /dev/null
            fi
            if [ "$(docker ps -a -q)" ]; then
              sudo docker rm $(docker ps -a -q) &> /dev/null
            fi
            sudo docker pull cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:user${IMAGE_TAG}
            echo "HERE"
            sudo docker run -d cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:user${IMAGE_TAG}
            pwd
